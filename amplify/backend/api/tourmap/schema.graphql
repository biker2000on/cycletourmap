type Tour @model {
  id: ID!
  # user: User! @connection(name: "AthleteTours")
  name: String!
  description: String!
  start_date: String!
  end_date: String!
  isPublic: Boolean!
  activities: [Activity]! @connection(name: "TourActivities")
}

type Activity @model {
  id: ID!
  activity_type: ACTIVITY_TYPE!
  strava_id: ID
  # athlete: User! @connection(name: "AthleteActivities")
  tour: Tour @connection(name: "TourActivities")
  achievement_count: Int
  athlete_count: Int
  average_heartrate: Float
  average_speed: Float
  average_temp: Int
  average_watts: Float
  comment_count: Int
  commute: Boolean
  device_watts: Boolean
  display_hide_heartrate_option: Boolean
  distance: Float
  elapsed_time: Int
  elev_high: Float
  elev_low: Float
  end_latlng: [Float]
  flagged: Boolean
  gear_id: String
  has_heartrate: Boolean
  has_kudoed: Boolean
  heartrate_opt_out: Boolean
  kilojoules: Float
  kudos_count: Int
  location_city: String
  location_country: String
  location_state: String
  manual: Boolean
  summary_polyline: String
  max_heartrate: Float
  max_speed: Float
  moving_time: Int
  name: String
  photo_count: Int
  pr_count: Int
  private: Boolean
  resource_state: Int
  start_date: String
  start_date_local: String
  start_latitude: Float
  start_longitude: Float
  start_latlng: [Float]
  timezone: String
  total_elevation_gain: Float
  total_photo_count: Int
  trainer: Boolean
  type: String
  upload_id: ID
  utc_offset: Int
  visibility: String
  workout_type: Int
}

type Athlete @model {
  id: ID!
  firstname: String
  lastname: String
  profile: String
  profile_medium: String
  sex: String
  city: String
  state: String
  country: String
}

type Auth @model {
  id: ID!
  access_token: String!
  expires_at: Int!
  refresh_token: String!
  token_type: String!
  strava_scope: [String]!
}

enum ACTIVITY_TYPE {
  STRAVA 
  MANUAL 
}